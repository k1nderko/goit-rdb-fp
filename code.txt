p.1.1
CREATE SCHEMA pandemic;

p.1.2
USE pandemic;

p.2.1
CREATE TABLE Entity (
    id VARCHAR(255) PRIMARY KEY,
    entity VARCHAR(255) NOT NULL
);

p.2.2
insert into Entity (id, entity)
select distinct Code, Entity from infectious_cases;

p.2.3
CREATE TABLE infectious_info (
    id INT AUTO_INCREMENT PRIMARY KEY,
    country_code VARCHAR(255),
    year INT,
    Number_yaws varchar(255),
    polio_cases INT,
    cases_guinea_worm INT,
    Number_rabies varchar(255),
    Number_malaria varchar(255),
    Number_hiv varchar(255),
    Number_tuberculosis varchar(255),
    Number_smallpox varchar(255),
    Number_cholera_cases varchar(255),
    FOREIGN KEY (country_code) REFERENCES entity(id)
);

p.2.4
insert into infectious_info 
	(country_code, 
    year, 
    number_yaws, 
    polio_cases, 
    cases_guinea_worm, 
    number_rabies, 
    number_malaria, 
    number_hiv,
    number_tuberculosis,
    number_smallpox,
    number_cholera_cases
    )
select 
	entity.id, 
    infectious_cases.Year, 
    infectious_cases.Number_yaws, 
    infectious_cases.polio_cases, 
    infectious_cases.cases_guinea_worm, 
    infectious_cases.Number_rabies, 
    infectious_cases.Number_malaria, 
    infectious_cases.Number_hiv, 
    infectious_cases.Number_tuberculosis, 
    infectious_cases.Number_smallpox, 
    infectious_cases.Number_cholera_cases
FROM infectious_cases
JOIN entity ON infectious_cases.Code = entity.id;

p.3.1
SELECT 
    Entity, 
    Code,
    AVG(Number_rabies) AS avg_rabies,
    MIN(Number_rabies) AS min_rabies,
    MAX(Number_rabies) AS max_rabies,
    SUM(Number_rabies) AS sum_rabies
FROM 
    infectious_cases
WHERE 
    Number_rabies <> ''
GROUP BY 
    Entity, Code;

p.3.2
SELECT 
    Entity, 
    Code,
    AVG(Number_rabies) AS avg_rabies,
    MIN(Number_rabies) AS min_rabies,
    MAX(Number_rabies) AS max_rabies,
    SUM(Number_rabies) AS sum_rabies
FROM 
    infectious_cases
WHERE 
    Number_rabies <> ''
GROUP BY 
    Entity, Code
ORDER BY 
    avg_rabies DESC;

p.3.3
SELECT 
    Entity, 
    Code,
    AVG(Number_rabies) AS avg_rabies,
    MIN(Number_rabies) AS min_rabies,
    MAX(Number_rabies) AS max_rabies,
    SUM(Number_rabies) AS sum_rabies
FROM 
    infectious_cases
WHERE 
    Number_rabies <> ''
GROUP BY 
    Entity, Code
ORDER BY 
    avg_rabies DESC
LIMIT 10;

p.4.1
SELECT 
    Entity, 
    Code,
    Year,
    CONCAT(Year, '-01-01') AS year_start_date
FROM 
    infectious_cases;

p.4.2
SELECT 
    Entity, 
    Code,
    Year,
    CURDATE() AS year_start_date
FROM 
    infectious_cases;

p.4.3
SELECT 
    Entity, 
    Code,
    Year,
   TIMESTAMPDIFF(YEAR, CONCAT(Year, '-01-01'), CURDATE()) AS year_difference
FROM 
    infectious_cases;

p.5
drop function if exists CalculateYearDifference;

DELIMITER //
   
CREATE FUNCTION CalculateYearDifference(input_year INT)
RETURNS INT
NO SQL
BEGIN
    DECLARE year_start DATE;
    DECLARE cur_date DATE;
    DECLARE year_diff INT;

    SET year_start = CONCAT(input_year, '-01-01');
    SET cur_date = CURDATE();
    SET year_diff = TIMESTAMPDIFF(YEAR, year_start, cur_date);

    RETURN year_diff;
END//

DELIMITER ;

SELECT 
    Entity, 
    Code,
    Year,
    CalculateYearDifference(Year) AS year_difference
FROM 
    infectious_cases;